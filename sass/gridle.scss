@import "config";

@import "gridlecss/mixins";
@import "gridlecss/media";

*,
*:before,
*:after {
  box-sizing: border-box;
}

.grid,
.grid--fluid {
  margin-left: auto;
  margin-right: auto;
  width: 100%;
  height: 100%;
}

.row,
.column {
  display: flex;
}

  .row {
    flex: 0 1 auto;
    flex-direction: row;
    flex-wrap: wrap;

    margin-left: 0;
    margin-right: 0;

    &--reverse {
      flex-direction: row-reverse;
    }
  }

  [class*="cell"] {
    margin-left: 0;
    margin-right: 0;
    flex-basis: 100%;
    max-width: 100%;
  }

//   .column {
//     flex-direction: column;

//     &--reverse {
//       flex-direction: column-reverse;
//     }
//   }

//     @if $flex-distribution {
//       @each $distribution in $flex-distributions {

//         .distribute-#{ $distribution } {
//           justify-content: space-#{ $distribution };
//         }
//       }
//     }

//     @if $flex-alignment {
//       @each $alignment in $flex-alignments {
//         @include flex-alignments( ".align-", nth($alignment, 1), nth($alignment, 2), "parent");
//       }
//     }

//     .cell {

//       &-order {
//         &--first {
//           order: -1;
//         }

//         &--last {
//           order: 1;
//         }
//       }

//       @if $flex-alignment {

//         &-align {

//           @each $alignment in $flex-alignments {
//             @include flex-alignments( "&--", "y", nth($alignment, 2), "child");
//           }
//         }
//       }
//     }

//     %cell-styles {
//       display: flex;
//       flex: 1 0 auto;
//       flex-direction: column;
//     }

// .cell-auto {
//   flex: 0 1 auto;
// }

%default {
  display: flex;
  flex: 1 0 auto;
  flex-direction: column;
}

@each $breakpoint in $mq-breakpoints {

  $size: nth($breakpoint, 1);
  $break: nth($breakpoint, 2);

  @include mq($from: $size) {

    .grid {
      width: $break;
    }

    .cell-#{ $size }-auto {
      flex: 0 1 auto;
    }

    @for $i from 1 through $grid-columns {

      .cell-#{ $size },
      .cell-#{ $size }-#{ $i },
      .cell-#{ $size }-offset-#{ $i } {
        @extend %default;
      }
    }

    @for $i from 1 through $grid-columns {
      $grid-column-width: (( 100 / $grid-columns ) * $i ) * 1%;
      $grid-gutter-calc: $grid-gutter / ( $grid-gutter * 0 + 1 );

      // Compiles: cell-*-# for each viewport
      //
      .cell-#{ $size }-#{ $i } {
        flex-basis: $grid-column-width;
        max-width: $grid-column-width;
      }

      // Compiles: cell-*-offset-# for each viewport
      //
      .cell-#{ $size }-offset-#{ $i } {
        margin-left: $grid-column-width;
      }
    }
  }
}


//     // Compiles: distribute-* for each viewport
//     //
//     .distribute-#{ $breakpoint } {

//       @if $flex-distribution {
//         @each $distribution-option in $flex-distributions {

//           &-#{ $distribution-option } {
//             justify-content: space-#{ $distribution-option };
//           }
//         }
//       }
//     }

//     // Compiles: align-* for each viewport
//     //
//     .align-#{ $breakpoint } {

//       @if $flex-alignment {
//         @each $align-option in $flex-alignments {
//           @include flex-alignments( "&-", nth($align-option, 1), nth($align-option, 2), "parent");
//         }
//       }
//     }

//     // Compiles: cell-*, cell-*-# and cell-*-offset-# for each viewport
//     //
//     @for $i from 1 through $grid-columns {

//       .cell-#{ $breakpoint },
//       .cell-#{ $breakpoint }-#{ $i },
//       .cell-#{ $breakpoint }-offset-#{ $i } {
//         // @extend %cell-styles;
//         display: flex;
//         flex: 1 0 auto;
//         flex-direction: column;
//       }

//       .cell-#{ $breakpoint }-auto {
//         flex: 0 1 auto;
//       }
//     }

//     // Compiles: cell-* for each viewport
//     //
//     .cell-#{ $breakpoint } {
//       flex: 1 0;
//       flex-basis: 0;
//       max-width: 100%;

//       &-order {
//         &--first {
//           order: -1;
//         }

//         &--last {
//           order: 1;
//         }
//       }

//       &-offset {
//         margin-left: $grid-gutter !important;
//       }

//       @if $flex-alignment {

//         &-align {

//           @each $alignment in $flex-alignments {
//             @include flex-alignments( "&--", "y", nth($alignment, 2), "child");
//           }
//         }
//       }
//     }


  // }
// }






////////////

.row, .column, [class*="cell"] {
  padding: 1em;
  background-color: rgba(136, 136, 136, .3);
  border-radius: 3px;
}

.cell-content {
  border: 1px solid red;
}

html, body {
  width: 100%;
  height: 100%;
  padding: 0;
  margin: 0;
}
