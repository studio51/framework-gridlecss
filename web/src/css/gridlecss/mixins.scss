// Conditional Media Query
//
// http://codepen.io/dsheiko/pen/KeLGy
//
@function translate-media-condition( $condition ) {
  $map: (
    "screen": "only screen",
    "xs": "max-width: #{$grid-sm-min}",
    "sm": "min-width: #{$grid-sm-min}",
    "md": "min-width: #{$grid-md-min}",
    "lg": "min-width: #{$grid-lg-min}"
  );

  @return map-get( $map, $condition );
}

@mixin media($args...) {
  $query: "";

  @each $arg in $args {
    $query: $query + translate-media-condition($arg);
  }

  @media #{ $query }  { @content; }
}

@mixin breakpoint($args) {

  @if $args == xs {
    @content;
  }

  @if $args == sm {
    @media only screen and (min-width: $grid-sm-min) {
      @content;
    }
  }

  @if $args == md {
    @media only screen and (min-width: $grid-md-min) {
      @content;
    }
  }

  @if $args == lg {
    @media only screen and (min-width: $grid-lg-min) {
      @content;
    }
  }
}

// Generate Flex Alignments
//
@mixin flex-alignments( $parent, $axis, $class, $requester ) {

  @each $element in $class {

    $selector: nth($element, 1);
    $rule: unquote(nth($element, 2));

    #{ $parent }#{ $selector } {

      @if $axis == "x" {

        justify-content: $rule;
        text-align: $rule;

      } @else if $axis == "y" {

        @if $requester == "parent" {

          align-items: $rule;

        } @else {

          align-self: $rule;
        }
      }
    }
  }
}
